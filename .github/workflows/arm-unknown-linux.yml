name: Crosstools NG

on:
  push:
    branches:
      - master

jobs:
  build_docker_image:
    runs-on: ubuntu-latest

    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d')"

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build and push image
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ github.token }}
          registry: docker.pkg.github.com
          repository: ${{ github.repository }}/ct-ng
          tags: ${{steps.date.outputs.date}},latest

  tc:
    needs: build_docker_image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - arm-unknown-linux-musleabi
          - arm-unknown-linux-gnueabi
          - arm-unknown-linux-uclibcgnueabi
      fail-fast: true

    env:
      CONTAINER_IMAGE: docker.pkg.github.com/${{ github.repository }}/ct-ng:latest
      GITHUB_TOKEN: ${{ secrets.GTOKEN }}

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 0

      - name: Docker login
        run: docker login docker.pkg.github.com -u $GITHUB_ACTOR -p $GITHUB_TOKEN

      - name: Pull Docker image with crosstools-ng
        run: docker pull "$CONTAINER_IMAGE"

      - name: Run ct-ng build
        run: |
          mkdir -p $GITHUB_WORKSPACE/x-tools
          chmod o+rwx $GITHUB_WORKSPACE/x-tools
          docker run -v $GITHUB_WORKSPACE/x-tools:/home/build/x-tools $CONTAINER_IMAGE ${{ matrix.target }}

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.target }}.tar.xz
          path: ./x-tools/${{ matrix.target }}.tar.xz

  create_release:
    needs: tc
    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{ secrets.GTOKEN }}

    steps:
      - uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.date.outputs.date }}
          tag_name: ${{ steps.date.outputs.date }}
          files: "artifacts/**"
          draft: false
          prerelease: false
          body: |
            Daily build
